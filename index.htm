<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <title>Shipwreck</title>
  <link rel="stylesheet" href="main.css">
</head>
<body>

  <!-- a form for submitting request to a Siren API -->
  <form method="post" onsubmit="_submit(); return false;">
    <div class="form-fields">
      <div class="form-field">
        <label>HREF</label>
        <input type="text" id="ship-href">
      </div>
      <div class="form-field">
        <label>Auth Token</label>
        <input type="text" id="ship-token">
      </div>
    </div>
    <input type="submit" value="Go">
    <span class="divider">|</span>
    <input type="button" value="Clear Storage" onclick="_clearStorage()">
  </form>

  <div id="flash"></div>

  <!-- injection point for rendering entities -->
  <div id="output"></div>

  <script type="text/javascript" src="./src/flash.js"></script>
  <script type="text/javascript" src="./src/siren.js"></script>
  <script type="text/javascript" src="./src/shipwreck.js"></script>
  <script type="text/javascript">

    // create shipwreck instance
    const ship = new Shipwreck(document.getElementById('output'));

    // message flasher
    const flash = new Flash(document.getElementById('flash'));

    ship.on('error', data => {
      flash.add(data.message, 'critical');
    });

    // get handle to form inputs
    const shipHref = document.getElementById('ship-href');
    const shipToken = document.getElementById('ship-token');

    shipToken.value = ship.token;

    const _clearStorage = async () => {
      sessionStorage.clear();
      shipToken.value = '';
      ship.token = '';
      flash.clear();
      flash.add('Session storage has been cleared.', 'success');
    }

    // submit API reqest
    let active = false;
    const _submit = async () => {
      // one request at a time
      if (active) return;
      active = true;
      flash.clear();
      // update the address bar to match the input value
      location.hash = shipHref.value;
      // update the auth token to match the input value
      ship.token = shipToken.value;
      // send the request
      await ship.fetch({ href: shipHref.value });
      active = false;
    }

    // sync the location hash with the api href input field
    const _checkHash = () => {
      if (shipHref.value === location.hash) return;
      shipHref.value = location.hash.slice(1);
      _submit();
    }

    window.onhashchange = _checkHash;
    window.onload = _checkHash;

  </script>
</body>
</html>
